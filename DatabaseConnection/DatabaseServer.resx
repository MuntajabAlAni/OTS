<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="ImbTryConnect.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAC0AAAAtCAYAAAA6GuKaAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAZdEVYdFNvZnR3YXJlAEFkb2JlIEltYWdlUmVhZHlxyWU8AAACHklEQVRoQ+2WDVEEMQyFTwIS
        kIAEJCABCUjAARKQgAQkIAEJSIB8NxOmlJf+7N+VoW/mzc21TfI2TbJ7mpiYmLg4roy3BQ6BG+Oj8dX4
        YfxsIOdejNhhfwiujQR8NypRvcTPkxG/mwOnz0YVeCtyY5uUEXW6t9icxCPuItwZa7XKPkEejKUscVPs
        U1rUdItf4nehll32u51mwL4lThVcy5tROYA42bppav2CnrBcSoJZb2kSzngZOH2tBkZgKf4v4SXBZCF6
        UgIxsiLbnJzjfGlG86CR7Q8djBt18N6oQD1GNq1EROSfddWs2JzB1eWbGKgrJUNrxebEn8o8a0r4WReb
        6SIHlRPGWnquRIQ41b4i/nMo4d/JpM5Y4LWqBNdGE7OXK40mC+tLRxx2LpwkNCEKhCOaJmrSCJzHTl09
        JAGrEAnmidfOa+wRqPyrjDcBp70OvQx8RkPKRpWcI+qVkk0IjHJHqln8umufq+xzTpUTD5afb3khSaTl
        oWZq2iSt5Dx2OdLZ3NxwEci4yk7PCFQk6zmIszjDNajrTOkzGqp9pxK+C8iGEkDN8jD5rfCfdVXzlMMh
        UA1K7asSSsG+GnGHIf2q423ag7S5e21Xg4ZR2WVW06TUK7/qJcRt7dZwvUjHlpP/rA8JMpoLTqkyfnHU
        5vZh460HiFJinUOK/pOZpmaVWOeQNQ2i1/uw08NBRikF57AZnpiY+F84nb4AV33uEga9dgIAAAAASUVO
        RK5CYII=
</value>
  </data>
  <data name="ImbRefresh.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAC0AAAAtCAYAAAA6GuKaAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAZdEVYdFNvZnR3YXJlAEFkb2JlIEltYWdlUmVhZHlxyWU8AAACKElEQVRoQ+2YUVHGMBCEfwlI
        QAISkIAEJCABB0hAAhKQgAQkIAHuewgTtndp0iad/EN3Zl/a9G5zudwlvZy4EtwYH4wvxnfjd0DevRof
        jXxTC8Z/GbHB97twZ8SIiqsl394b15AEJ+K3GbfGUkRbia2SEB1fM9E/eDaqkV7EtgcdVy2aHKyJLmNw
        Th5iHJLvPHsz6lIrP4ya7zqmSjRGMKYfJyIUkbVgEqUAMLE8XfT9quiS4E9j9VI54NvIdi5c3636jCLC
        zm8pWyVE+wTh+NDnRdGRsZZUqAU2PV/eSoSiKWs6GI4QnBAJV4aivbSg441GjXBXNA91IMt0FJ6M6j+n
        K9przeGSbAC2qNmsZkT1n3OhxdutGOkFypjab+VCtJdTPaMcVaRaUgYX0NSggfTEnkgjmG66gNZFJtEb
        qY3XEg2sEGXYRS4YspOnhtdQeubzECDwFH0ETtFHQkVPXz0ABTwXPaJOdwfFPBfduyMOgXcsLP2TmAJe
        g7mKFPHuZWHfnwXe8ZRD+/RgA6pw91g4E7xo5z9QRoHLc/K1KUha/kYL1wsIvprBfVGbTTLWU3j0622T
        aIA4TzjkNrEXpMAQ+6UfKGxY3reCg5iXfoldekMp4pB3OCJyUU3HBh3XS4WcXZsZYtYc5mQs0fTKZ8Rh
        p0pyrRT1LWRyo6rSL4g6y7hXPGIPb1qUKzYibd4T5ZG0oYkMj2wtEELkSKGcTIyKwST/Ky6XH50hGW4D
        xOINAAAAAElFTkSuQmCC
</value>
  </data>
</root>